Create a class called JokeManager and move the functionality to manage jokes in it. 
The class must have a parameter-free constructor, and the following methods:

public void addJoke(String joke) - adds a joke to the manager.
public String drawJoke() - chooses one joke at random and returns it. It there are no jokes stored in the joke manager, the method should return the string "Jokes are in short supply.".
public void printJokes() - prints all the jokes stored in the joke manager.


User interface
Create a class called UserInterface and move the UI functionality of the program there. 
The class must have a constructor with two parameters. 
The first parameter is an instance of the JokeManager class, and the second parameter is an instance of the Scanner class.
In addition, the class should have the method public void start() that can be used to start the user interface.

The user interface should provide the user with the following commands:

X - ending: exits the method start.
1 - adding: asks the user for the joke to be added to the joke manager, and then adds it.
2 - drawing: chooses a random joke from the joke manager and prints it. If there are no jokes in the manager, thi string "Jokes are in short supply." will be printed.
3 - printing: prints all the jokes stored in the joke manager.


import java.util.Scanner;

public class Program {

    public static void main(String[] args) {
        JokeManager manager = new JokeManager();
        Scanner scanner = new Scanner(System.in);

        UserInterface ui = new UserInterface(manager, scanner);
        ui.start();
    }
}
    
import java.util.ArrayList;
import java.util.Random;

public class JokeManager {
    private ArrayList<String> jokes;
    public JokeManager(){
        this.jokes = new ArrayList<>();
    }
    
    public void addJoke(String joke){
        this.jokes.add(joke);
    }
    
    public String drawJoke(){
        if (jokes.isEmpty()){
            return  "Jokes are in short supply.";
        } else{
            return jokes.get(new Random().nextInt(jokes.size()));
        }
    }
    
    public void printJokes(){
        for (String joke: jokes){
            System.out.println(joke);
        }
    }
    
}
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class UserInterface {

    private final JokeManager jokeManager;
    private final Scanner scanner;

    public UserInterface(JokeManager jokeManager, Scanner scanner) {
        this.jokeManager = jokeManager;
        this.scanner = scanner;
    }

    public void start() {
        final Map<String, String> validCommands = new HashMap<>();
        validCommands.put("1", " - add a joke");
        validCommands.put("2", " - draw a joke");
        validCommands.put("3", " - list jokes");
        validCommands.put("X", " - stop");

        while (true) {
            for (Map.Entry<String, String> stringStringEntry : validCommands.entrySet()) {
                System.out.println(stringStringEntry.getKey() + stringStringEntry.getValue());
            }
            String input = scanner.nextLine();
            if (!validCommands.containsKey(input)) {
                System.out.println("Unknown command");
            }

            if ("1".equalsIgnoreCase(input)) {
                System.out.println("Write the joke to be added:");
                final String joke = scanner.nextLine();
                jokeManager.addJoke(joke);
            }
            if ("2".equalsIgnoreCase(input)) {
                System.out.println(jokeManager.drawJoke());
            }

            if ("3".equalsIgnoreCase(input)) {
                System.out.print("Printing the jokes.");
                jokeManager.printJokes();
            }

            if ("X".equalsIgnoreCase(input)) {
                System.out.println("X");
                break;
            }
        }
    }
}
